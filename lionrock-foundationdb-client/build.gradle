buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'jacoco'
}

sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':lionrock-proto-java')
    implementation 'org.foundationdb:fdb-java:6.2.22'
    implementation 'io.grpc:grpc-stub:1.38.0'
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.17.3'

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.11.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.9.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
}

test {
    useJUnitPlatform()
}

task sourceJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allJava
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact tasks.sourceJar
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/panghy/lionrock"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
        maven {
            name = "OSSRH"
            if(project.version.endsWith('-SNAPSHOT')) {
                url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            } else {
                url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}