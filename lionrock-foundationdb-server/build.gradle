plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'maven-publish'
    id 'jacoco'
}

group 'io.github.panghy.lionrock'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.3")
    set('wavefrontVersion', "2.2.0")
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.zipkin.brave:brave-instrumentation-grpc'

    implementation 'com.wavefront:wavefront-spring-boot-starter'

    implementation 'io.github.lognet:grpc-spring-boot-starter:4.5.4'
    implementation project(':lionrock-proto-java')
    implementation 'org.foundationdb:fdb-java:6.2.22'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.wavefront:wavefront-spring-boot-bom:${wavefrontVersion}"
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/panghy/lionrock"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        csv.required = true
    }
}